# Test for disable_load_balance_on_write feature.
#

# Force load balance node to 1.
##backend_weight0 = 0
##backend_weight1 = 1

# Disable load balance in current transaction only.
# (default behavior)

# Create test table
'Q'	"DROP TABLE IF EXISTS pgproto_test1"
'Y'
'Q'	"CREATE TABLE pgproto_test1(i INT)"
'Y'

# Start a transaction
'P'	""	"BEGIN"	0
'B'	""	""	0	0	0
'E'	""	0

# Issue Parse SELECT. This should be sent to node 1.
'P'	"S1"	"SELECT 1"	0

# Issue INSERT
'P'	""	"INSERT INTO pgproto_test1 VALUES(1)"	0
'B'	""	""	0	0	0
'E'	""	0

# Issue Bind/Execute SELECT. This should be sent to primary node.
'B'	""	"S1"	0	0	0
'E'	""	0

# Issue another SELECT. This should be sent to primary node.
'P'	""	"SELECT 2"
'B'	""	""	0	0	0
'E'	""	0

# Issue COMMIT
'P'	""	"COMMIT"	0
'B'	""	""	0	0	0
'E'	""	0
'S'
'Y'

# Issue another SELECT. This should be sent to node 1 because outside a transaction.
'P'	""	"SELECT 3"
'B'	""	""	0	0	0
'E'	""	0
'S'
'Y'

# Start a transaction
'P'	""	"BEGIN"	0
'B'	""	""	0	0	0
'E'	""	0

# Issue Bind/Execute SELECT. This should be sent to node 0 despite
# disable_load_balance_on_write = 'transaction' because previous prase
# messge was sent to primary node which was done by parse_before_bind.
'B'	""	"S1"	0	0	0
'E'	""	0

# Issue another SELECT. This should be sent to node 1.
'P'	""	"SELECT 4"
'B'	""	""	0	0	0
'E'	""	0

# Issue COMMIT
'P'	""	"COMMIT"	0
'B'	""	""	0	0	0
'E'	""	0
'C'	'S'	"S1"
'S'
'Y'

# DROP test table
'Q'	"DROP TABLE pgproto_test1"
'Y'

'X'
